import streamlit as st
from datetime import date
import matplotlib.pyplot as plt
import cv2
import time
from pyngrok import ngrok
from db_task import *
from predict import *
import pyngrok
from pydicom.data import get_testdata_file

#print(publ_url)
channel = 3
my_test_transforms = transforms.Compose(
    [  # Compose makes it possible to have many transforms
        transforms.ToPILImage(),
        transforms.Grayscale(num_output_channels=channel),
        transforms.Resize((300, 300)),
        transforms.CenterCrop(224),
        transforms.ToTensor(),
    ]
)
def main_gui():
    image = r'C:\Users\TRUONGLUAT\PycharmProjects\LVTN\group_of_experts_in_white_PPE.jpg'
    st.header('ü§ñ BK - VISION üíì')
    #st.markdown("***")
    image = cv2.imread(image)
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    st.image(image)
    st.markdown("***")
    st.subheader('T·ªïng quan:')
    st.write('ƒê√¢y l√† website th·ª≠ nghi·ªám ·ª©ng d·ª•ng c·ªßa AI trong vi·ªác "Ch·∫©n ƒëo√°n b·ªánh ·ªü ph·ªïi", '
             'l√† ƒë·ªÅ t√†i LVTN ƒë∆∞·ª£c th·ª±c hi·ªán b·ªüi sinh vi√™n tr∆∞·ªùng ƒê·∫°i h·ªçc B√°ch Khoa - ƒêHQG '
             'TP.HCM c√πng gi·∫£ng vi√™n h∆∞·ªõng d·∫´n.')
    st.write('ƒê·ªÉ b·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng c√¥ng c·ª• ch·∫©n ƒëo√°n, b·∫°n ph·∫£i "ƒêƒÉng nh·∫≠p" v√†o h·ªá th·ªëng b·∫±ng'
             ' thanh Menu b√™n c·∫°nh v√† n·∫øu ch∆∞a c√≥ t√†i kho·∫£n b·∫°n c√≥ th·ªÉ ch·ªçn "ƒêƒÉng k√≠" ƒë·ªÉ '
             't·∫°o t√†i kho·∫£n m·ªõi !')
    st.write('ƒê·ªÉ b·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng ch·ª©c nƒÉng ch·∫©n ƒëo√°n, b·∫°n ph·∫£i "ƒêƒÉng nh·∫≠p" v√†o h·ªá th·ªëng b·∫±ng'
             ' thanh Menu b√™n c·∫°nh v√† n·∫øu ch∆∞a c√≥ t√†i kho·∫£n b·∫°n c√≥ th·ªÉ ch·ªçn "ƒêƒÉng k√≠" ƒë·ªÉ '
             't·∫°o t√†i kho·∫£n m·ªõi !')
    st.markdown("***")
    st.write('·ª®ng d·ª•ng s·ª≠ d·ª•ng m√¥ h√¨nh  EfficientNet-B0 l√†m c√¥ng c·ª• ch·∫©n ƒëo√°n b·ªánh !')
    if st.button('Xem th√™m v·ªÅ m√¥ h√¨nh'):
        col1, col2, col3 = st.columns([1, 8, 1])
        with col2:
            df = pd.read_csv(r'C:\Users\TRUONGLUAT\PycharmProjects\LVTN\Dataset\model_eval.csv')
            df = pd.DataFrame(df)
            st.write(df)
            image1 = r'C:\Users\TRUONGLUAT\PycharmProjects\LVTN\Dataset\cfs_matrix.png'
            image1 = cv2.imread(image1)
            image1 = cv2.cvtColor(image1, cv2.COLOR_BGR2RGB)
            st.image(image1)
        st.write('C√°c th√¥ng s·ªë tr√™n ƒë∆∞·ª£c ƒë√°nh gi√° tr√™n m·ªôt t·∫≠p ki·ªÉm th·ª≠ c√≥ 400 ·∫£nh, 200 ·∫£nh d∆∞∆°ng t√≠nh v√† 200 ·∫£nh √¢m t√≠nh')
    st.markdown("***")
    st.warning('Website v·∫´n ƒëang trong qu√° tr√¨nh x√¢y d·ª±ng v√† th·ª≠ nghi·ªám, k·∫øt qu·∫£ ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o !')
    return ()

def user_gui():
    st.info('Xin ch√†o, ' + str(select(st.session_state['username'],2)) + ' !')
    st.markdown("***")
    with st.sidebar:
        image = cv2.imread(r'C:\Users\TRUONGLUAT\PycharmProjects\LVTN\logo.png')
        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        st.image(image)
        st.markdown("***")
        st.success("üßë‚Äç‚öïÔ∏è ƒêƒÉng nh·∫≠p ng∆∞·ªùi d√πng: " +  str(st.session_state['username']))
        st.markdown("***")
        if st.button("ƒêƒÉng xu·∫•t"):
            st.session_state['login'] = 'notlogin'
            st.experimental_rerun()

    time.sleep(0.5)
    task = st.selectbox("Loa·ªã ch·∫©n ƒëo√°n:",
                        ["Ch·∫©n ƒëo√°n Covid-19", "M√¥ h√¨nh kh√°c"])

    if task == "Ch·∫©n ƒëo√°n Covid-19":
        if st.checkbox('S·ª≠ d·ª•ng th√¥ng tin c√° nh√¢n t·ª´ t√†i kho·∫£n'):
            with st.form('form'):
                    image = st.file_uploader('T·∫£i ·∫£nh X-quang ph·ªïi c·∫ßn d·ª± ƒëo√°n v√†o ƒë√¢y:',type=['png','jpeg','jpg','dcm'])
                    submit = st.form_submit_button("X√°c nh·∫≠n")
                    if submit:
                        if image:
                            with st.spinner("ƒêang x·ª≠ l√≠..."):
                                st.markdown("***")
                                time.sleep(1)
                                try:
                                    check = Image.open(image)
                                    col1, col2, col3 = st.columns(3)
                                    with col1:
                                        st.image(image, width=448)
                                    with col3:
                                        st.write('K·∫øt qu·∫£ ch·∫©n ƒëo√°n:')
                                        result = prediction(image, my_test_transforms)
                                        res = int(result[0])
                                        confidence = int(result[1])
                                        if res == 1:
                                            st.error('D∆∞∆°ng t√≠nh')
                                            st.write('ƒê·ªô tin c·∫≠y:')
                                            st.info(str(confidence) + ' %')
                                        else:
                                            st.success('√Çm t√≠nh')
                                            st.write('ƒê·ªô tin c·∫≠y:')
                                            st.info(str(confidence) + ' %')
                                        image = Image.open(image)
                                        img_name = 'img_' + str(count_file()) + '.png'
                                        image_name = 'C:/Users/TRUONGLUAT/PycharmProjects/LVTN/Image/' + str(img_name)
                                        image.save(image_name)
                                        today = date.today()
                                        today = today.strftime("%Y-%m-%d")
                                        user_name = str(st.session_state['username'])
                                        name = select(str(st.session_state['username']), 2)
                                        age = select(str(st.session_state['username']), 3)
                                        address = select(str(st.session_state['username']), 6)
                                        sex = select(str(st.session_state['username']), 7)
                                        create_resultstable()
                                        add_results(user_name, res, name, age, address, sex, img_name, today)
                                        st.stop()
                                except IOError:
                                    img_name = read_dicom(image)
                                    image_name = 'C:/Users/TRUONGLUAT/PycharmProjects/LVTN/Image/' + str(img_name)
                                    prediction(image_name, my_test_transforms)
                                    col1, col2, col3 = st.columns(3)
                                    with col1:
                                        image = cv2.imread(image_name)
                                        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
                                        st.image(image, width=448)
                                    with col3:
                                        image = 'C:/Users/TRUONGLUAT/PycharmProjects/LVTN/Image/' + str(img_name)
                                        st.write('K·∫øt qu·∫£ ch·∫©n ƒëo√°n:')
                                        result = prediction(str(image), my_test_transforms)
                                        res = int(result[0])
                                        confidence = int(result[1])
                                        if res == 1:
                                            st.error('D∆∞∆°ng t√≠nh')
                                            st.write('ƒê·ªô tin c·∫≠y:')
                                            st.info(str(confidence) + ' %')
                                        else:
                                            st.success('√Çm t√≠nh')
                                            st.write('ƒê·ªô tin c·∫≠y:')
                                            st.info(str(confidence) + ' %')
                                        today = date.today()
                                        today = today.strftime("%Y-%m-%d")
                                        user_name = str(st.session_state['username'])
                                        name = select(str(st.session_state['username']), 2)
                                        age = select(str(st.session_state['username']), 3)
                                        address = select(str(st.session_state['username']), 6)
                                        sex = select(str(st.session_state['username']), 7)
                                        create_resultstable()
                                        add_results(user_name, res, name, age, address, sex, img_name, today)
                                        st.stop()

                        else:
                            st.error('Vui l√≤ng ch·ªçn ·∫£nh c·∫ßn ch·∫©n ƒëo√°n !!!')

        else:
            with st.form('form'):
                name = st.text_input("H·ªç v√† t√™n: ")
                sex = st.selectbox("Gi·ªõi t√≠nh", ["Nam", "N·ªØ", "Kh√°c"])
                address = st.selectbox("ƒê·ªãa ch·ªâ:", (
                "An Giang", "B√† R·ªãa - V≈©ng T√†u", "B·∫Øc Giang", "B·∫Øc K·∫°n", "B·∫°c Li√™u", "B·∫Øc Ninh", "B·∫øn Tre", "B√¨nh ƒê·ªãnh",
                "B√¨nh D∆∞∆°ng", "B√¨nh Ph∆∞·ªõc", "B√¨nh Thu·∫≠n", "C√† Mau", "C·∫ßn Th∆°", "Cao b·∫±ng", "ƒê√† N·∫µng", "ƒê·∫Øk L·∫Øk",
                "ƒê·∫Øk N√¥ng", "ƒêi·ªán Bi√™n", "ƒê·ªìng Nai", "ƒê·ªìng Th√°p", "Gia Lai", "H√† Giang", "H√† Nam", "H√† N·ªôi", "H√† Tƒ©nh",
                "H·∫£i D∆∞∆°ng", "H·∫£i Ph√≤ng", "H·∫≠u Giang", "H√≤a B√¨nh", "H∆∞ng Y√™n", "Kh√°nh H√≤a", "Ki√™n Giang", "Kon Tum",
                "Lai Ch√¢u",
                "L√¢m ƒê·ªìng", "L·∫°ng S∆°n", "L√†o Cai", "Long An", "Nam ƒê·ªãnh", "Ngh·ªá An", "Ninh B√¨nh", "Ninh Thu·∫≠n",
                "Ph√∫ Th·ªç", "Ph√∫ Y√™n", "Qu·∫£ng B√¨nh", "Qu·∫£ng Nam", "Qu·∫£ng Ng√£i", "Qu·∫£ng Ninh", "Qu·∫£ng Tr·ªã", "S√≥c TrƒÉng",
                "S∆°n La", "T√¢y Ninh",
                "Th√°i B√¨nh", "Th√°i Nguy√™n", "Thanh H√≥a", "Th·ª´a Thi√™n Hu·∫ø", "Ti·ªÅn Giang", "TP. H·ªì Ch√≠ Minh", "Tr√† Vinh",
                "Tuy√™n Quang", "Vƒ©nh Long", "Vƒ©nh Ph√∫c", "Y√™n B√°i"))
                age = st.date_input("Ng√†y sinh: ")
                image = st.file_uploader('T·∫£i ·∫£nh X-quang ph·ªïi c·∫ßn d·ª± ƒëo√°n v√†o ƒë√¢y:',type=['png','jpeg','jpg','dcm'])
                submit = st.form_submit_button("X√°c nh·∫≠n")
                if submit:
                    if image and name and age and address and sex:
                        st.markdown("***")
                        with st.spinner("ƒêang x·ª≠ l√≠..."):
                            time.sleep(1)
                            try:
                                check = Image.open(image)
                                col1, col2, col3 = st.columns(3)
                                with col1:
                                    st.image(image, width=448)
                                with col3:
                                    st.write('K·∫øt qu·∫£ ch·∫©n ƒëo√°n:')
                                    result = prediction(image, my_test_transforms)
                                    res = int(result[0])
                                    confidence = int(result[1])
                                    if res == 1:
                                        st.error('D∆∞∆°ng t√≠nh')
                                        st.write('ƒê·ªô tin c·∫≠y:')
                                        st.info(str(confidence) + ' %')
                                    else:
                                        st.success('√Çm t√≠nh')
                                        st.write('ƒê·ªô tin c·∫≠y:')
                                        st.info(str(confidence) + ' %')
                                image = Image.open(image)
                                image_name = r'C:\Users\TRUONGLUAT\PycharmProjects\LVTN\Image\img_' + str(count_file()) + '.png'
                                img_name = 'img_' + str(count_file()) + '.png'
                                image.save(image_name)
                                today = date.today()
                                today = today.strftime("%Y-%m-%d")
                                print(today)
                                user_name = str(st.session_state['username'])
                                create_resultstable()
                                add_results(user_name, res, name, age, address, sex, img_name, today)
                                st.stop()

                            except IOError:
                                img_name = read_dicom(image)
                                image_name = 'C:/Users/TRUONGLUAT/PycharmProjects/LVTN/Image/' + str(img_name)
                                prediction(image_name, my_test_transforms)
                                col1, col2, col3 = st.columns(3)
                                with col1:
                                    image = cv2.imread(image_name)
                                    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
                                    st.image(image, width=448)
                                with col3:
                                    image = 'C:/Users/TRUONGLUAT/PycharmProjects/LVTN/Image/' + str(img_name)
                                    st.write('K·∫øt qu·∫£ ch·∫©n ƒëo√°n:')
                                    result = prediction(str(image), my_test_transforms)
                                    res = int(result[0])
                                    confidence = int(result[1])
                                    if res == 1:
                                        st.error('D∆∞∆°ng t√≠nh')
                                        st.write('ƒê·ªô tin c·∫≠y:')
                                        st.info(str(confidence) + ' %')
                                    else:
                                        st.success('√Çm t√≠nh')
                                        st.write('ƒê·ªô tin c·∫≠y:')
                                        st.info(str(confidence) + ' %')
                                    today = date.today()
                                    today = today.strftime("%Y-%m-%d")
                                    user_name = str(st.session_state['username'])
                                    name = select(str(st.session_state['username']), 2)
                                    age = select(str(st.session_state['username']), 3)
                                    address = select(str(st.session_state['username']), 6)
                                    sex = select(str(st.session_state['username']), 7)
                                    create_resultstable()
                                    add_results(user_name, res, name, age, address, sex, img_name, today)
                                    st.stop()

                    else:
                        st.error('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin !!!')
    else:
        with st.form('form'):
            st.warning('Ch·ª©c nƒÉng v·∫´n ƒëang trong qu√° tr√¨nh ho√†n thi·ªán ... ! ‚öíÔ∏è')
            submit = st.form_submit_button("X√°c nh·∫≠n")
        return ()

def admin_gui():
    with st.sidebar:
        image = cv2.imread(r'C:\Users\TRUONGLUAT\PycharmProjects\LVTN\logo.png')
        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        st.image(image)
        st.markdown("***")
        st.success("üßë‚Äçüíª ƒêƒÉng nh·∫≠p d∆∞·ªõi quy·ªÅn qu·∫£n tr·ªã vi√™n")
        st.markdown("***")
        if st.button("ƒêƒÉng xu·∫•t"):
            st.session_state['login'] = 'notlogin'
            st.experimental_rerun()
    st.header("DASHBOARD üìä")
    task = st.selectbox("HO·∫†T ƒê·ªòNG:",
                        ["Th√¥ng tin ng∆∞·ªùi d√πng","Th·ªëng k√™ ch·∫©n ƒëo√°n"])
    if task == "Th√¥ng tin ng∆∞·ªùi d√πng":
        userinfo = pd.DataFrame(displayall(),columns=['T√†i kho·∫£n','M·∫≠t kh·∫©u','H·ªç v√† t√™n','Ng√†y sinh','S·ªë ƒëi·ªán tho·∫°i','Email','V·ªã tr√≠','Gi·ªõi t√≠nh'])
        st.dataframe(userinfo)
        st.markdown("***")
        filter = st.selectbox("L·ªåC D·ªÆ LI·ªÜU:", ["L·ªçc theo t√†i kho·∫£n", "L·ªçc theo t√™n", "L·ªçc theo ng√†y sinh",  "L·ªçc theo s·ªë ƒëi·ªán tho·∫°i", "L·ªçc theo mail", "L·ªçc theo gi·ªõi t√≠nh", "L·ªçc theo v·ªã tr√≠"])
        with st.form('form_filter'):
            if filter == 'L·ªçc theo t√†i kho·∫£n':
                info = st.text_input('')
                submit = st.form_submit_button("X√°c nh·∫≠n")
                if submit:
                    filter_info = pd.DataFrame(filter_username(info),
                                            columns=['T√†i kho·∫£n', 'M·∫≠t kh·∫©u', 'H·ªç v√† t√™n', 'Ng√†y sinh', 'S·ªë ƒëi·ªán tho·∫°i',
                                                     'Email', 'V·ªã tr√≠', 'Gi·ªõi t√≠nh'])
                    st.write(filter_info)
            elif filter == 'L·ªçc theo t√™n':
                info = st.text_input('')
                submit = st.form_submit_button("X√°c nh·∫≠n")
                if submit:
                    filter_info = pd.DataFrame(filter_name(info),
                                            columns=['T√†i kho·∫£n', 'M·∫≠t kh·∫©u', 'H·ªç v√† t√™n', 'Ng√†y sinh', 'S·ªë ƒëi·ªán tho·∫°i',
                                                     'Email', 'V·ªã tr√≠', 'Gi·ªõi t√≠nh'])
                    st.write(filter_info)
            elif filter == 'L·ªçc theo ng√†y sinh':
                info = str(st.date_input("Ng√†y sinh: "))
                submit = st.form_submit_button("X√°c nh·∫≠n")
                if submit:
                    filter_info = pd.DataFrame(filter_age(info),
                                            columns=['T√†i kho·∫£n', 'M·∫≠t kh·∫©u', 'H·ªç v√† t√™n', 'Ng√†y sinh', 'S·ªë ƒëi·ªán tho·∫°i',
                                                     'Email', 'V·ªã tr√≠', 'Gi·ªõi t√≠nh'])
                    st.write(filter_info)
            elif filter == 'L·ªçc theo s·ªë ƒëi·ªán tho·∫°i':
                info = st.text_input('')
                submit = st.form_submit_button("X√°c nh·∫≠n")
                if submit:
                    filter_info = pd.DataFrame(filter_phone(info),
                                            columns=['T√†i kho·∫£n', 'M·∫≠t kh·∫©u', 'H·ªç v√† t√™n', 'Ng√†y sinh', 'S·ªë ƒëi·ªán tho·∫°i',
                                                     'Email', 'V·ªã tr√≠', 'Gi·ªõi t√≠nh'])
                    st.write(filter_info)
            elif filter == 'L·ªçc theo mail':
                info = st.text_input('')
                submit = st.form_submit_button("X√°c nh·∫≠n")
                if submit:
                    filter_info = pd.DataFrame(filter_mail(info),
                                            columns=['T√†i kho·∫£n', 'M·∫≠t kh·∫©u', 'H·ªç v√† t√™n', 'Ng√†y sinh', 'S·ªë ƒëi·ªán tho·∫°i',
                                                     'Email', 'V·ªã tr√≠', 'Gi·ªõi t√≠nh'])
                    st.write(filter_info)
            elif filter == 'L·ªçc theo gi·ªõi t√≠nh':
                info = st.selectbox('',('Nam','N·ªØ'))
                submit = st.form_submit_button("X√°c nh·∫≠n")
                if submit:
                    filter_info = pd.DataFrame(filter_sex(info),
                                            columns=['T√†i kho·∫£n', 'M·∫≠t kh·∫©u', 'H·ªç v√† t√™n', 'Ng√†y sinh', 'S·ªë ƒëi·ªán tho·∫°i',
                                                     'Email', 'V·ªã tr√≠', 'Gi·ªõi t√≠nh'])
                    st.write(filter_info)
            elif filter == 'L·ªçc theo v·ªã tr√≠':
                info = st.selectbox("ƒê·ªãa ch·ªâ:", (
                "An Giang", "B√† R·ªãa - V≈©ng T√†u", "B·∫Øc Giang", "B·∫Øc K·∫°n", "B·∫°c Li√™u", "B·∫Øc Ninh", "B·∫øn Tre", "B√¨nh ƒê·ªãnh",
                "B√¨nh D∆∞∆°ng", "B√¨nh Ph∆∞·ªõc", "B√¨nh Thu·∫≠n", "C√† Mau", "C·∫ßn Th∆°", "Cao b·∫±ng", "ƒê√† N·∫µng", "ƒê·∫Øk L·∫Øk",
                "ƒê·∫Øk N√¥ng", "ƒêi·ªán Bi√™n", "ƒê·ªìng Nai", "ƒê·ªìng Th√°p", "Gia Lai", "H√† Giang", "H√† Nam", "H√† N·ªôi", "H√† Tƒ©nh",
                "H·∫£i D∆∞∆°ng", "H·∫£i Ph√≤ng", "H·∫≠u Giang", "H√≤a B√¨nh", "H∆∞ng Y√™n", "Kh√°nh H√≤a", "Ki√™n Giang", "Kon Tum",
                "Lai Ch√¢u",
                "L√¢m ƒê·ªìng", "L·∫°ng S∆°n", "L√†o Cai", "Long An", "Nam ƒê·ªãnh", "Ngh·ªá An", "Ninh B√¨nh", "Ninh Thu·∫≠n",
                "Ph√∫ Th·ªç", "Ph√∫ Y√™n", "Qu·∫£ng B√¨nh", "Qu·∫£ng Nam", "Qu·∫£ng Ng√£i", "Qu·∫£ng Ninh", "Qu·∫£ng Tr·ªã", "S√≥c TrƒÉng",
                "S∆°n La", "T√¢y Ninh",
                "Th√°i B√¨nh", "Th√°i Nguy√™n", "Thanh H√≥a", "Th·ª´a Thi√™n Hu·∫ø", "Ti·ªÅn Giang", "TP. H·ªì Ch√≠ Minh", "Tr√† Vinh",
                "Tuy√™n Quang", "Vƒ©nh Long", "Vƒ©nh Ph√∫c", "Y√™n B√°i"))
                submit = st.form_submit_button("X√°c nh·∫≠n")
                if submit:
                    filter_info = pd.DataFrame(filter_address(info),
                                            columns=['T√†i kho·∫£n', 'M·∫≠t kh·∫©u', 'H·ªç v√† t√™n', 'Ng√†y sinh', 'S·ªë ƒëi·ªán tho·∫°i',
                                                     'Email', 'V·ªã tr√≠', 'Gi·ªõi t√≠nh'])
                    st.write(filter_info)

    elif task == "Th·ªëng k√™ ch·∫©n ƒëo√°n":
        col1, col2 = st.columns([7,3])
        with col1:
            st.subheader('K·∫æT QU·∫¢ CH·∫®N ƒêO√ÅN C·ª¶A NG∆Ø·ªúI D√ôNG:')
            userinfo = pd.DataFrame(displayall_result(),
                                        columns=['T√†i kho√†n s·ª≠ d·ª•ng' ,'K·∫øt qu·∫£', 'T√™n b·ªánh nh√¢n' , 'Ng√†y sinh', 'ƒê·ªãa ch·ªâ', 'Gi·ªõi t√≠nh', 'T√™n t·ªáp ·∫£nh', 'Ng√†y ch·∫©n ƒëo√°n'])
            st.dataframe(userinfo)
            #st.markdown("***")
            filter = st.selectbox("L·ªåC D·ªÆ LI·ªÜU:",
                                  ["L·ªçc theo t√†i kho·∫£n", "L·ªçc theo t√™n", "L·ªçc theo ng√†y sinh", "L·ªçc theo k·∫øt qu·∫£", "L·ªçc theo ng√†y ch·∫©n ƒëo√°n", 'L·ªçc theo gi·ªõi t√≠nh', 'L·ªçc theo k·∫øt qu·∫£'])
            with st.form('form_filter'):
                if filter == 'L·ªçc theo t√†i kho·∫£n':
                    info = st.text_input('')
                    submit = st.form_submit_button("X√°c nh·∫≠n")
                    if submit:
                        filter_info = pd.DataFrame(filter1_username(info),
                                                   columns=['T√†i kho√†n s·ª≠ d·ª•ng' ,'K·∫øt qu·∫£', 'T√™n b·ªánh nh√¢n' , 'Ng√†y sinh', 'ƒê·ªãa ch·ªâ', 'Gi·ªõi t√≠nh', 'T√™n t·ªáp ·∫£nh', 'Ng√†y ch·∫©n ƒëo√°n'])
                        st.write(filter_info)
                elif filter == 'L·ªçc theo t√™n':
                    info = st.text_input('')
                    submit = st.form_submit_button("X√°c nh·∫≠n")
                    if submit:
                        filter_info = pd.DataFrame(filter1_name(info),
                                                   columns=['T√†i kho√†n s·ª≠ d·ª•ng' ,'K·∫øt qu·∫£', 'T√™n b·ªánh nh√¢n' , 'Ng√†y sinh', 'ƒê·ªãa ch·ªâ', 'Gi·ªõi t√≠nh', 'T√™n t·ªáp ·∫£nh', 'Ng√†y ch·∫©n ƒëo√°n'])
                        st.write(filter_info)
                elif filter == 'L·ªçc theo ng√†y sinh':
                    info = str(st.date_input("Ng√†y sinh: "))
                    submit = st.form_submit_button("X√°c nh·∫≠n")
                    if submit:
                        filter_info = pd.DataFrame(filter1_age(info),
                                                   columns=['T√†i kho√†n s·ª≠ d·ª•ng' ,'K·∫øt qu·∫£', 'T√™n b·ªánh nh√¢n' , 'Ng√†y sinh', 'ƒê·ªãa ch·ªâ', 'Gi·ªõi t√≠nh', 'T√™n t·ªáp ·∫£nh', 'Ng√†y ch·∫©n ƒëo√°n'])
                        st.write(filter_info)
                elif filter == 'L·ªçc theo ng√†y ch·∫©n ƒëo√°n':
                    info = str(st.date_input("Ng√†y sinh: "))
                    submit = st.form_submit_button("X√°c nh·∫≠n")
                    if submit:
                        filter_info = pd.DataFrame(filter1_date(info),
                                                   columns=['T√†i kho√†n s·ª≠ d·ª•ng' ,'K·∫øt qu·∫£', 'T√™n b·ªánh nh√¢n' , 'Ng√†y sinh', 'ƒê·ªãa ch·ªâ', 'Gi·ªõi t√≠nh', 'T√™n t·ªáp ·∫£nh', 'Ng√†y ch·∫©n ƒëo√°n'])
                        st.write(filter_info)
                elif filter == 'L·ªçc theo v·ªã tr√≠':
                    info = st.selectbox("ƒê·ªãa ch·ªâ:", (
                        "An Giang", "B√† R·ªãa - V≈©ng T√†u", "B·∫Øc Giang", "B·∫Øc K·∫°n", "B·∫°c Li√™u", "B·∫Øc Ninh", "B·∫øn Tre",
                        "B√¨nh ƒê·ªãnh",
                        "B√¨nh D∆∞∆°ng", "B√¨nh Ph∆∞·ªõc", "B√¨nh Thu·∫≠n", "C√† Mau", "C·∫ßn Th∆°", "Cao b·∫±ng", "ƒê√† N·∫µng", "ƒê·∫Øk L·∫Øk",
                        "ƒê·∫Øk N√¥ng", "ƒêi·ªán Bi√™n", "ƒê·ªìng Nai", "ƒê·ªìng Th√°p", "Gia Lai", "H√† Giang", "H√† Nam", "H√† N·ªôi",
                        "H√† Tƒ©nh",
                        "H·∫£i D∆∞∆°ng", "H·∫£i Ph√≤ng", "H·∫≠u Giang", "H√≤a B√¨nh", "H∆∞ng Y√™n", "Kh√°nh H√≤a", "Ki√™n Giang",
                        "Kon Tum",
                        "Lai Ch√¢u",
                        "L√¢m ƒê·ªìng", "L·∫°ng S∆°n", "L√†o Cai", "Long An", "Nam ƒê·ªãnh", "Ngh·ªá An", "Ninh B√¨nh", "Ninh Thu·∫≠n",
                        "Ph√∫ Th·ªç", "Ph√∫ Y√™n", "Qu·∫£ng B√¨nh", "Qu·∫£ng Nam", "Qu·∫£ng Ng√£i", "Qu·∫£ng Ninh", "Qu·∫£ng Tr·ªã",
                        "S√≥c TrƒÉng",
                        "S∆°n La", "T√¢y Ninh",
                        "Th√°i B√¨nh", "Th√°i Nguy√™n", "Thanh H√≥a", "Th·ª´a Thi√™n Hu·∫ø", "Ti·ªÅn Giang", "TP. H·ªì Ch√≠ Minh",
                        "Tr√† Vinh",
                        "Tuy√™n Quang", "Vƒ©nh Long", "Vƒ©nh Ph√∫c", "Y√™n B√°i"))
                    submit = st.form_submit_button("X√°c nh·∫≠n")
                    if submit:
                        filter_info = pd.DataFrame(filter1_address(info),
                                                   columns=['T√†i kho√†n s·ª≠ d·ª•ng' ,'K·∫øt qu·∫£', 'T√™n b·ªánh nh√¢n' , 'Ng√†y sinh', 'ƒê·ªãa ch·ªâ', 'Gi·ªõi t√≠nh', 'T√™n t·ªáp ·∫£nh', 'Ng√†y ch·∫©n ƒëo√°n'])
                        st.write(filter_info)
                elif filter == 'L·ªçc theo gi·ªõi t√≠nh':
                    info = st.selectbox('', ('Nam', 'N·ªØ'))
                    submit = st.form_submit_button("X√°c nh·∫≠n")
                    if submit:
                        filter_info = pd.DataFrame(filter1_sex(info),
                                                   columns=['T√†i kho√†n s·ª≠ d·ª•ng' ,'K·∫øt qu·∫£', 'T√™n b·ªánh nh√¢n' , 'Ng√†y sinh', 'ƒê·ªãa ch·ªâ', 'Gi·ªõi t√≠nh', 'T√™n t·ªáp ·∫£nh', 'Ng√†y ch·∫©n ƒëo√°n'])
                        st.write(filter_info)
                elif filter == 'L·ªçc theo k·∫øt qu·∫£':
                    info = st.selectbox('', ('√Çm t√≠nh', 'D∆∞∆°ng t√≠nh'))
                    if info == '√Çm t√≠nh':
                        info = 0
                    else:
                        info = 1
                    submit = st.form_submit_button("X√°c nh·∫≠n")
                    if submit:
                        filter_info = pd.DataFrame(filter1_result(info),
                                                   columns=['T√†i kho√†n s·ª≠ d·ª•ng' ,'K·∫øt qu·∫£', 'T√™n b·ªánh nh√¢n' , 'Ng√†y sinh', 'ƒê·ªãa ch·ªâ', 'Gi·ªõi t√≠nh', 'T√™n t·ªáp ·∫£nh', 'Ng√†y ch·∫©n ƒëo√°n'])
                        st.write(filter_info)
        with col2:
            st.subheader('BI·ªÇU ƒê·ªí:')
            labels = '√Çm t√≠nh', 'D∆∞∆°ng t√≠nh'
            sizes = [count_data(0), count_data(1)]
            my_colors = ['green', 'red']
            plt.figure(figsize=plt.figaspect(1))
            wp = {'linewidth': 1, 'edgecolor': "black"}
            plt.pie(sizes, startangle=90, autopct=make_autopct(sizes),wedgeprops = wp, colors=my_colors)
            plt.legend(labels,
                      title="K·∫øt qu·∫£ ch·∫©n ƒëo√°n:",
                      loc="best")
            st.pyplot(plt)


def sign_gui():
    menu = st.sidebar.selectbox("MENU:",["Trang ch·ªß","ƒêƒÉng k√≠"])
    st.sidebar.markdown("***")
    if menu == "Trang ch·ªß":
        username = st.sidebar.text_input("T√†i kho·∫£n: ")
        password = st.sidebar.text_input("M·∫≠t kh·∫©u: ",type='password')
        st.sidebar.markdown("***")
        if st.sidebar.button("X√°c nh·∫≠n") and st.session_state['login'] == 'notlogin':
            if username and password:
                result = login_user(username, password)
                if result and str(select(username, 0)) != "admin":
                    with st.sidebar:
                        with st.spinner("ƒêang x·ª≠ l√≠..."):
                            time.sleep(0.5)
                            st.sidebar.success("ƒêƒÉng nh·∫≠p th√†nh c√¥ng!")
                            st.session_state['login'] = 'loginuser'
                            st.session_state['username'] = username
                            st.experimental_rerun()
                elif result and str(select(username, 0)) == "admin":
                    with st.sidebar:
                        with st.spinner("ƒêang x·ª≠ l√≠..."):
                            time.sleep(0.5)
                            st.sidebar.success("ƒêƒÉng nh·∫≠p th√†nh c√¥ng!")
                            st.session_state['login'] = 'loginadmin'
                            st.experimental_rerun()
                else:
                    st.sidebar.error('T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c, xin th·ª≠ l·∫°i !!!')
                    main_gui()
                    st.stop()
            else:
                st.sidebar.error('Vui l√≤ng cung c·∫•p ƒë·∫ßy ƒë·ªß t√†i kho·∫£n v√† m·∫≠t kh·∫©u !!!')
                main_gui()
                st.stop()
        else:
            main_gui()
            st.stop()
    elif menu == "ƒêƒÉng k√≠":
        allowed_num = set(("0123456789"))
        allowed_chars = set(("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_"))
        with st.sidebar:
            st.info('Th√¥ng tin ƒëƒÉng k√≠ c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c b·∫£o m·∫≠t v√† l∆∞u tr·ªØ ·ªü c∆° s·ªü d·ªØ li·ªáu !')
        with st.form('form1'):
            st.header('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin ƒëƒÉng k√≠: üìã')
            st.markdown("***")
            col1, col2 = st.columns(2)
            with col1:
                name = st.text_input("H·ªç v√† t√™n: ")
            with col2:
                age = st.date_input("Ng√†y sinh: ")
            col3, col4 = st.columns(2)
            with col3:
                phone = st.text_input("S·ªë ƒëi·ªán tho·∫°i: ")
                phone_set = set(phone)
            with col4:
                mail = st.text_input("Email: ")
            col8, col9 = st.columns(2)
            with col8:
                address = st.selectbox("ƒê·ªãa ch·ªâ:",("An Giang","B√† R·ªãa - V≈©ng T√†u","B·∫Øc Giang","B·∫Øc K·∫°n","B·∫°c Li√™u","B·∫Øc Ninh","B·∫øn Tre","B√¨nh ƒê·ªãnh","B√¨nh D∆∞∆°ng","B√¨nh Ph∆∞·ªõc","B√¨nh Thu·∫≠n","C√† Mau","C·∫ßn Th∆°","Cao b·∫±ng","ƒê√† N·∫µng","ƒê·∫Øk L·∫Øk",
                                       "ƒê·∫Øk N√¥ng","ƒêi·ªán Bi√™n","ƒê·ªìng Nai","ƒê·ªìng Th√°p","Gia Lai","H√† Giang","H√† Nam","H√† N·ªôi","H√† Tƒ©nh","H·∫£i D∆∞∆°ng","H·∫£i Ph√≤ng","H·∫≠u Giang","H√≤a B√¨nh","H∆∞ng Y√™n","Kh√°nh H√≤a","Ki√™n Giang","Kon Tum","Lai Ch√¢u",
                                       "L√¢m ƒê·ªìng","L·∫°ng S∆°n","L√†o Cai","Long An","Nam ƒê·ªãnh","Ngh·ªá An","Ninh B√¨nh","Ninh Thu·∫≠n","Ph√∫ Th·ªç","Ph√∫ Y√™n","Qu·∫£ng B√¨nh","Qu·∫£ng Nam","Qu·∫£ng Ng√£i","Qu·∫£ng Ninh","Qu·∫£ng Tr·ªã","S√≥c TrƒÉng","S∆°n La","T√¢y Ninh",
                                       "Th√°i B√¨nh","Th√°i Nguy√™n","Thanh H√≥a","Th·ª´a Thi√™n Hu·∫ø","Ti·ªÅn Giang","TP. H·ªì Ch√≠ Minh","Tr√† Vinh","Tuy√™n Quang","Vƒ©nh Long","Vƒ©nh Ph√∫c","Y√™n B√°i"))
            with col9:
                sex = st.selectbox("Gi·ªõi t√≠nh", ["Nam","N·ªØ","Kh√°c"])
            col5, none = st.columns(2)
            with col5:
                username_new = st.text_input("T√™n t√†i kho·∫£n: ")
                username_new_set = set(username_new)
            col6, col7 = st.columns(2)
            with col6:
                password_new = st.text_input("M·∫≠t kh·∫©u: ",type='password')
            with col7:
                password_repeat = st.text_input("Nh·∫≠p l·∫°i m·∫≠t kh·∫©u: ",type='password')
            st.markdown("***")
            submit = st.form_submit_button("X√°c nh·∫≠n")
        if submit:
            if name and age and address and username_new and password_new and password_repeat and mail and phone and sex:
                if username_new_set.issubset(allowed_chars) and len(username_new) >4 and len(username_new) <15 and password_new == password_repeat and phone_set.issubset(allowed_num) and len(phone) == 10:
                    if check_username(username_new):
                        st.error('T√†i kho·∫£n ƒë√£ t·ªìn t·∫°i, vui l√≤ng th·ª≠ t√™n t√†i kho·∫£n kh√°c !')
                    else:
                        with st.spinner("ƒêang x·ª≠ l√≠..."):
                            time.sleep(2)
                            create_usertable()
                            add_userdata(username_new, password_new, name, age, phone, mail, address, sex)
                            st.success("ƒêƒÉng k√≠ t√†i kho·∫£n m·ªõi th√†nh c√¥ng !")
                        time.sleep(0.5)
                        st.info("M·ªùi b·∫°n quay v·ªÅ trang ch·ªß ƒë·ªÉ ƒëƒÉng nh·∫≠p v√† s·ª≠ d·ª•ng")
                else:
                    if username_new_set.issubset(allowed_chars) == False or len(username_new) <5 or len(username_new) >15:
                        st.error('T√™n t√†i kho·∫£n kh√¥ng h·ª£p l·ªá ( ƒë·ªô d√†i 6 - 15 k√≠ t·ª± v√† kh√¥ng s·ª≠ d·ª•ng k√≠ t·ª± ƒë·∫∑c bi·ªát ) !')
                    if password_new != password_repeat:
                        st.error('Nh·∫≠p l·∫°i m·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c !')
                    if phone_set.issubset(allowed_num) == False or len(phone) != 10:
                        st.error('S·ªë ƒëi·ªán tho·∫°i li√™n l·∫°c kh√¥ng h·ª£p l·ªá !')
            else:
                st.warning('Vui l√≤ng cung c·∫•p ƒë·∫ßy ƒë·ªß th√¥ng tin c·∫ßn thi·∫øt !')

if __name__ == '__main__':
    if 'login' not in st.session_state:
        #publ_url = ngrok.connect()
        time.sleep(2)
        st.session_state['login'] = 'notlogin'
    if st.session_state['login'] == 'notlogin':
        sign_gui()
    elif st.session_state['login'] == 'loginuser':
        user_gui()
    else:
        admin_gui()
